{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGrideItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGrideItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","clasName","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKd,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCLnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAe,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAItC,OAFAc,QAAQC,IAAKN,EAAIC,EAAOV,GAGpB,sBAAKgB,UAAU,wCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCLCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAwBxC,OAjBAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEFH,EAAS,CACLjB,KAAMoB,EACPL,SAAS,SAMtB,CAACtB,IAIGuB,EDrB0BK,CAAc5B,GAAlCa,EAHwB,EAG7BN,KAAae,EAHgB,EAGhBA,QAErB,OACI,qCACI,qBAAIO,SAAS,mCAAb,cAAmD7B,EAAnD,OAEEsB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEjB,qBAAKA,UAAU,YAAf,SAESL,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADEA,EAAIC,aEftBmB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADJA,Y,MCdnCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.eeeda6a5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue (e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >2 ) {\r\n            setCategories(cats => [inputValue, ...cats,]);\r\n            setInputValue('');\r\n        }                  \r\n    }\r\n\r\n    return (      \r\n            <form onSubmit={ handleSubmit }>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>   \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZNctPmo8Snd3974OlUrgQqEycv8LhS5C`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGrideItem = ({ id, title, url }) => {\r\n\r\n    console.log( id, title, url )\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__pulse\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGrideItem } from './GifGrideItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n//    const [images, setImages] = useState([]);\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 clasName=\"animate__animated animate__pulse\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n        <div className=\"card-grid\">     \r\n            {\r\n                 images.map( img => (\r\n                    <GifGrideItem \r\n                        key= { img.id }\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }\r\n                   \r\n        </div>\r\n        </>     \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGif'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                      \r\n                 setState({\r\n                     data: imgs,\r\n                    loading: false\r\n                });\r\n                    \r\n                   \r\n            })\r\n\r\n    }, [category])\r\n\r\n    \r\n\r\n    return state; /* { data:[], loading: true} */\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n //   const handleAdd = () => {\r\n //       setcategories([ 'HuneterXHunter', ...categories, ] );\r\n //   }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />                   \r\n \r\n            <ol>\r\n                {\r\n                    categories.map( category => ( \r\n                        <GifGrid \r\n                             key={ category }\r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }      \r\n            </ol>     \r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}